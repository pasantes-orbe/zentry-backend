[33mcommit 38bc3a04089aa97d7cb0ec76009908cb60af1c01[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: Camila Escalante <escalantecamila.n@gmail.com>
Date:   Mon Jul 14 15:55:09 2025 -0300

    Guardo cambios antes de cambiar de rama

[1mdiff --git a/classes/Countries.ts b/classes/Countries.ts[m
[1mindex 278eb5b..c15fc68 100644[m
[1m--- a/classes/Countries.ts[m
[1m+++ b/classes/Countries.ts[m
[36m@@ -2,38 +2,26 @@[m [mimport CountryModel from '../models/country.model';[m
 import Country from './Country';[m
 [m
 class Countries {[m
[31m-[m
     public async getAll(){[m
         try {[m
[31m-            [m
             return await CountryModel.findAll();[m
[31m-[m
         } catch (error) {[m
             return false[m
         }[m
     }[m
 [m
     public async getOne(id: number): Promise<Country>{[m
[31m-[m
         try {[m
             const c = await CountryModel.findByPk(id);[m
[31m-[m
             const { name, latitude, longitude, avatar, id: countryId } = c.dataValues;[m
[31m-[m
             const country = new Country(name, latitude, longitude, avatar, countryId);[m
[31m-[m
             return country;[m
[31m-[m
         } catch (error) {[m
             console.log(error);[m
             return new Promise((resolve, reject) => {[m
                 reject(false)[m
             })[m
         }[m
[31m-[m
     }[m
[31m-[m
[31m-[m
 }[m
[31m-[m
 export default Countries;[m
\ No newline at end of file[m
[1mdiff --git a/models/associations.ts b/models/associations.ts[m
[1mindex a60e66b..3f03f6f 100644[m
[1m--- a/models/associations.ts[m
[1m+++ b/models/associations.ts[m
[36m@@ -122,11 +122,6 @@[m [mpasswordChangeRequest.belongsTo(User, {[m
     targetKey: 'id'[m
 })[m
 [m
[31m-User.hasMany(passwordChangeRequest, {[m
[31m-    foreignKey: 'id_user',[m
[31m-    sourceKey: 'id'[m
[31m-});[m
[31m-[m
 Reservation.belongsTo(User, {[m
     foreignKey: 'id_user',[m
     targetKey: 'id'[m
[36m@@ -139,17 +134,16 @@[m [mReservation.belongsTo(AmenityModel, {[m
 [m
 GuardSchedule.belongsTo(User, {[m
     foreignKey: 'id_user',[m
[31m-    targetKey: 'id'[m
[32m+[m[32m    targetKey: 'id',[m
[32m+[m[32m    as: 'user' //14-7-25[m
 })[m
 [m
 GuardSchedule.belongsTo(CountryModel, {[m
     foreignKey: 'id_country',[m
[31m-    targetKey: 'id'[m
[32m+[m[32m    targetKey: 'id',[m
[32m+[m[32m    as: 'country' //14-7-25[m
 });[m
 [m
[31m-[m
[31m-[m
[31m-[m
 CheckInModel.belongsTo(User, {[m
     foreignKey: 'id_guard',[m
     targetKey: 'id'[m
[36m@@ -160,7 +154,6 @@[m [mCheckInModel.belongsTo(User, {[m
     targetKey: 'id'[m
 })[m
 [m
[31m-[m
 CheckInModel.belongsTo(User, {[m
     as: 'guard',[m
     foreignKey: 'id_guard',[m
[1mdiff --git a/models/guard_schedule.model.ts b/models/guard_schedule.model.ts[m
[1mindex 138ffe4..dd23905 100644[m
[1m--- a/models/guard_schedule.model.ts[m
[1m+++ b/models/guard_schedule.model.ts[m
[36m@@ -15,7 +15,6 @@[m [mconst GuardSchedule = db.define('guard_schedule', {[m
     exit: { type: DataTypes.DATE },[m
 },[m
 {[m
[31m-    [m
     defaultScope: {[m
         include: [[m
             {[m
[36m@@ -29,10 +28,7 @@[m [mconst GuardSchedule = db.define('guard_schedule', {[m
         }[m
     },[m
     timestamps: false[m
[31m-[m
 }[m
 );[m
 [m
[31m-[m
[31m-[m
 export default GuardSchedule;[m
\ No newline at end of file[m
[1mdiff --git a/routes/guard.routes.ts b/routes/guard.routes.ts[m
[1mindex d6125e2..57bce27 100644[m
[1m--- a/routes/guard.routes.ts[m
[1m+++ b/routes/guard.routes.ts[m
[36m@@ -10,7 +10,6 @@[m [mimport GuardCountry from "../models/guard_country.model";[m
 import GuardSchedule from "../models/guard_schedule.model";[m
 import Role from "../models/roles.model";[m
 import User from "../models/user.model";[m
[31m-[m
 import moment from "moment";[m
 import DatesHelper from "../classes/Dates";[m
 [m
[36m@@ -31,11 +30,8 @@[m [mrouter.get('/get_by_country/:id_country', [[m
     check('id_country').isNumeric(),[m
     check('id_country').notEmpty(),[m
 ], async (req: Request, res: Response) => {[m
[31m-[m
     const guards = await new Guard().getByCountry(+req.params.id_country);[m
[31m-[m
     return res.json(guards);[m
[31m-[m
 });[m
 [m
 /**[m
[36m@@ -45,17 +41,13 @@[m [mrouter.get('/get_country/:id_user', [[m
     check('id_user').isNumeric(),[m
     check('id_user').notEmpty(),[m
 ], async (req: Request, res: Response) => {[m
[31m-[m
     const country = await new Guard().getCountry(+req.params.id_user)[m
[31m-[m
     return res.json(country);[m
[31m-[m
 });[m
 [m
 /**[m
  * Assign Country[m
  */[m
[31m-[m
 router.post('/assign', [[m
     check('id_user').notEmpty(),[m
     check('id_user').isNumeric(),[m
[36m@@ -65,21 +57,17 @@[m [mrouter.post('/assign', [[m
     check('id_user').custom(isGuard),[m
     noErrors[m
 ], async (req: Request, res: Response) => {[m
[31m-[m
     const guard = req.body;[m
     const assign = await new Guard().assignCountry(guard);[m
     res.json(assign);[m
[31m-[m
 });[m
 [m
[31m-/**[m
[31m- * Get Schedule by Country[m
[31m- */[m
[32m+[m[32m/*  Get Schedule by Country 14-7-25[m
[32m+[m
 router.get('/schedule/all/:id_country', [[m
     check('id_country').isNumeric(),[m
     check('id_country').notEmpty(),[m
 ], async (req: Request, res: Response) => {[m
[31m-[m
     const guards = await GuardSchedule.findAll({[m
         where: {[m
             id_country: req.params.id_country[m
[36m@@ -87,18 +75,14 @@[m [mrouter.get('/schedule/all/:id_country', [[m
     })[m
 [m
     const object = guards.map(x => {[m
[31m-[m
         const guard = x;[m
         const now = moment();[m
         const start = guard.start;[m
         const exit = guard.exit;[m
         const isInHournow = now.isBetween(start, exit);[m
[31m-        [m
         const isWorkDay = new DatesHelper().getDay(now.day());[m
[31m-[m
         console.log("ESTE ES EL DIA LABORAL", isWorkDay, "Este es si esta en horario", isInHournow);[m
         const isWorking = () => (isInHournow && (isWorkDay == guard.week_day)) ? true : false;[m
[31m-[m
         console.log("GUARDIA", guard.user.id);[m
         console.log("NOw", now);[m
         console.log("start", start);[m
[36m@@ -106,46 +90,65 @@[m [mrouter.get('/schedule/all/:id_country', [[m
         console.log("@", isWorkDay == guard.week_day);[m
         console.log("@@", isWorkDay);[m
         console.log("@@@", guard.week_day);[m
[31m-[m
         return {[m
             guard,[m
             guard['working']: isWorking()[m
         }[m
     })[m
[32m+[m[32m    return res.json(object);[m
[32m+[m[32m});*/[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m * Get Schedule by Country[m
[32m+[m[32m */[m
[32m+[m[32mrouter.get('/schedule/all/:id_country', [[m
[32m+[m[32m    check('id_country').isNumeric(),[m
[32m+[m[32m    check('id_country').notEmpty(),[m
[32m+[m[32m], async (req: Request, res: Response) => {[m
[32m+[m[32m    const guards = await GuardSchedule.findAll({[m
[32m+[m[32m        where: {[m
[32m+[m[32m            id_country: req.params.id_country[m
[32m+[m[32m        },[m
[32m+[m[32m        include: [{ model: User, as: 'user' }] // incluimos la relaciÃ³n con alias[m
[32m+[m[32m    });[m
 [m
[31m-    return res.json(object);[m
[32m+[m[32m    const now = moment();[m
[32m+[m[32m    const isWorkDay = new DatesHelper().getDay(now.day());[m
[32m+[m
[32m+[m[32m    const object = guards.map((guard: any) => {[m
[32m+[m[32m        const start = guard.start;[m
[32m+[m[32m        const exit = guard.exit;[m
[32m+[m[32m        const week_day = guard.week_day;[m
[32m+[m[32m        const isInHournow = now.isBetween(start, exit);[m
[32m+[m[32m        const isWorking = isInHournow && isWorkDay === week_day;[m
[32m+[m[32m        return {[m
[32m+[m[32m            guard,[m
[32m+[m[32m            working: isWorking[m
[32m+[m[32m        };[m
[32m+[m[32m    });[m
 [m
